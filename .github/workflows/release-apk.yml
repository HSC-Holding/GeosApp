name: Update Latest APK Release

on:
  push:
    branches:
      - main
    paths:
      - "apk/*signed*.apk"  # Attiva solo se cambia un APK signed
  workflow_dispatch:  # Attiva manualmente

permissions:
  contents: write  # Needed for creating releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find Latest Version APK
        id: find_apk
        run: |
          # Find all signed APK files
          APK_FILES=$(find apk -name "*signed*.apk")

          if [[ -z "$APK_FILES" ]]; then
            echo "❌ No signed APK found, terminating"
            exit 1
          fi

          # Extract version numbers and find the highest one
          LATEST_VERSION=""
          LATEST_APK=""

          for apk in "$APK_FILES"; do
            # Extract version number (like 1.0, 2.1, etc.)
            VERSION=$(echo "$apk" | grep -oP '\d+\.\d+(?=\s+signed)')

            if [[ -n "$VERSION" ]]; then
              # Compare versions using version sort
              if [[ -z "$LATEST_VERSION" ]] || [[ "$(echo -e "$VERSION\n$LATEST_VERSION" | sort -V | tail -n1)" == "$VERSION" ]]; then
                LATEST_VERSION="$VERSION"
                LATEST_APK="$apk"
              fi
            fi
          done

          if [[ -z "$LATEST_APK" ]]; then
            echo "❌ Could not determine latest version, using most recent file"
            LATEST_APK=$(echo "$APK_FILES" | sort -r | head -n 1)
          fi

          echo "📦 Latest version found: $LATEST_VERSION (File: $LATEST_APK)"
          echo "APK_PATH=$LATEST_APK" >> $GITHUB_ENV

      - name: Delete Existing Release
        run: |
          gh release delete latest --yes || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create New Release and Upload APK
        run: |
          # Extract version number for the release title
          VERSION=$(echo "$APK_PATH" | grep -oP '\d+\.\d+(?=\s+signed)')

          if [[ -z "$VERSION" ]]; then
            TITLE="Latest APK"
            NOTES="Newest signed APK: $APK_PATH"
          else
            TITLE="Geos v$VERSION"
            NOTES="Newest signed APK version: v$VERSION\nFile: $APK_PATH"
          fi

          gh release create latest "$APK_PATH" --title "$TITLE" --notes "$NOTES" --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
