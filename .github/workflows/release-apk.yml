name: Update Latest APK Release

on:
  push:
    branches:
      - main
    paths:
      - "apk/*signed.apk"  # Attiva solo se cambia un APK signed
  workflow_dispatch:  # Attiva manualmente

permissions:
  contents: write  # Needed for creating releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find Latest Version APK
        id: find_apk
        run: |
          # Find all signed APK files
          mapfile -t APK_FILES < <(find apk -name "*signed.apk" | sort -V)

          if [[ ${#APK_FILES[@]} -eq 0 ]]; then
            echo "❌ No signed APK found, terminating"
            exit 1
          fi

          # Select the latest file (last in sorted list)
          LATEST_APK="${APK_FILES[-1]}"

          # Extract version number from filename (geos-v1.0-signed.apk -> 1.0)
          LATEST_VERSION=$(echo "$LATEST_APK" | grep -oP '(?<=geos-v)\d+\.\d+(?=-signed)')

          echo "📦 Latest version found: $LATEST_VERSION (File: $LATEST_APK)"
          echo "APK_PATH=$LATEST_APK" >> $GITHUB_ENV
          echo "APK_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Rename APK to Static Name
        run: |
          # Define new name for the APK
          RENAMED_APK="apk/geos-latest.apk"

          # Rename the APK file
          mv "$APK_PATH" "$RENAMED_APK"

          # Update the environment variable
          echo "APK_PATH=$RENAMED_APK" >> $GITHUB_ENV
          echo "✅ APK renamed to: $RENAMED_APK"

      - name: Delete Existing Release
        run: |
          gh release delete latest --yes || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create New Release and Upload APK
        run: |
          # Use extracted version for title and notes
          if [[ -z "$APK_VERSION" ]]; then
            TITLE="Latest APK"
            NOTES="Newest signed APK: $APK_PATH"
          else
            TITLE="Geos v$APK_VERSION"
            NOTES="Newest signed APK version: v$APK_VERSION\nFile: $APK_PATH"
          fi

          gh release create latest "$APK_PATH" --title "$TITLE" --notes "$NOTES" --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
